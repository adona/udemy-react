{"ast":null,"code":"var _jsxFileName = \"/Users/adonaiosif/Dropbox/code/courses/udemy-react/01-starting-setup/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseList from \"./components/expense_list/ExpenseList\";\nimport NewExpense from \"./components/new_expense/NewExpense\"; // const startingExpenses = [\n//   {\n//     id: 'e1',\n//     title: 'Toilet Paper',\n//     amount: 94.12,\n//     date: new Date(2020, 7, 14),\n//   },\n//   { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n//   {\n//     id: 'e3',\n//     title: 'Car Insurance',\n//     amount: 294.67,\n//     date: new Date(2021, 2, 28),\n//   },\n//   {\n//     id: 'e4',\n//     title: 'New Desk (Wooden)',\n//     amount: 450,\n//     date: new Date(2021, 5, 12),\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [expenses, setExpenses] = useState(startingExpenses);\n\n  const addExpenseHandler = expense => {\n    expense.date = new Date(expense.date); // Convert string to date\n\n    expense.id = Math.random().toString();\n    setExpenses(prevExpenses => {\n      return prevExpenses.slice().concat([expense]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n      expenses: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XU4uRhghxZvPFzmSoQMyVi3jl1I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adonaiosif/Dropbox/code/courses/udemy-react/01-starting-setup/src/App.js"],"names":["React","useState","ExpenseList","NewExpense","App","expenses","setExpenses","startingExpenses","addExpenseHandler","expense","date","Date","id","Math","random","toString","prevExpenses","slice","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACM,gBAAD,CAAxC;;AAEA,QAAMC,iBAAiB,GAAIC,OAAD,IAAa;AACrCA,IAAAA,OAAO,CAACC,IAAR,GAAe,IAAIC,IAAJ,CAASF,OAAO,CAACC,IAAjB,CAAf,CADqC,CACG;;AACxCD,IAAAA,OAAO,CAACG,EAAR,GAAaC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAb;AAEAT,IAAAA,WAAW,CAAEU,YAAD,IAAkB;AAC5B,aAAOA,YAAY,CAACC,KAAb,GAAqBC,MAArB,CAA4B,CAACT,OAAD,CAA5B,CAAP;AACD,KAFU,CAAX;AAGD,GAPD;;AASA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEH;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlBQD,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\n\nimport ExpenseList from \"./components/expense_list/ExpenseList\";\nimport NewExpense from \"./components/new_expense/NewExpense\";\n\n// const startingExpenses = [\n//   {\n//     id: 'e1',\n//     title: 'Toilet Paper',\n//     amount: 94.12,\n//     date: new Date(2020, 7, 14),\n//   },\n//   { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n//   {\n//     id: 'e3',\n//     title: 'Car Insurance',\n//     amount: 294.67,\n//     date: new Date(2021, 2, 28),\n//   },\n//   {\n//     id: 'e4',\n//     title: 'New Desk (Wooden)',\n//     amount: 450,\n//     date: new Date(2021, 5, 12),\n//   },\n// ];\n\n\nfunction App() {\n  const [expenses, setExpenses] = useState(startingExpenses);\n\n  const addExpenseHandler = (expense) => {\n    expense.date = new Date(expense.date);  // Convert string to date\n    expense.id = Math.random().toString();\n\n    setExpenses((prevExpenses) => {\n      return(prevExpenses.slice().concat([expense]))\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <ExpenseList expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}